metadata:
  name: all_example_from_generators
  description: Employee dataset generated using pre-configured generators
  version: 1.0.0
  author: GenXData Generator System
column_name:
- employee_id
- first_name
- last_name
- email
- phone
- department
- join_date
- salary
- performance_rating
- bonus
- project_code
num_of_rows: 100
shuffle: true
configs:
- names:
  - employee_id
  strategy:
    name: SERIES_STRATEGY
    params:
      start: 1001
      step: 1
- names:
  - first_name
  strategy:
    name: RANDOM_NAME_STRATEGY
    params:
      name_type: first
      gender: any
      case: title
- names:
  - last_name
  strategy:
    name: RANDOM_NAME_STRATEGY
    params:
      name_type: last
      gender: any
      case: upper
- names:
  - email
  strategy:
    name: PATTERN_STRATEGY
    params:
      regex: '[a-z]{5,10}\.[a-z]{3,8}@[a-z]{3,8}\.(com|org|net)'
- names:
  - phone
  strategy:
    name: PATTERN_STRATEGY
    params:
      regex: \d{3}-\d{3}-\d{4}
- names:
  - department
  strategy:
    name: DISTRIBUTED_CHOICE_STRATEGY
    params:
      choices:
        Engineering: 40
        Sales: 25
        Marketing: 15
        HR: 10
        Finance: 10
- names:
  - join_date
  strategy:
    name: DATE_GENERATOR_STRATEGY
    params:
      start_date: '2020-01-01'
      end_date: '2024-12-31'
      format: '%Y-%m-%d'
      output_format: '%m/%d/%Y'
- names:
  - salary
  strategy:
    name: NUMBER_RANGE_STRATEGY
    params:
      start: 30000
      end: 150000
- names:
  - performance_rating
  strategy:
    name: DISTRIBUTED_CHOICE_STRATEGY
    params:
      choices:
        Low: 50
        Medium: 30
        High: 15
        Critical: 5
- names:
  - bonus
  strategy:
    name: NUMBER_RANGE_STRATEGY
    params:
      start: 0.0
      end: 100.0
- names:
  - project_code
  strategy:
    name: PATTERN_STRATEGY
    params:
      regex: '[A-Z]{3}-\d{4}-[A-Z]{2}'
file_writer:
- type: JSON_WRITER
  params:
    output_path: ./output/generated_data.json
    orient: records
    date_format: iso
    indent: 2
